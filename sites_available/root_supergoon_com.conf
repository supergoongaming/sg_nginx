server {
    # # #
    # redirects
    # # #
    # if ($host = www.supergoon.com) {
    #     return 301 https://$host$request_uri;
    # }
    # if ($host = supergoon.com) {
    #     return 301 https://$host$request_uri;
    # }
    # # # #
    # # Config
    # # # #
    listen       80;
    server_name  supergoon.com www.supergoon.com;
    # # Return 404 on http calls to only allow http
    # return 404;
    # Allow access to the acme-challenge directory for Certbot validation
    location /.well-known/acme-challenge/ {
        root /var/www/challenge;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }


    access_log /var/log/nginx/access.log;
}

server {

    server_name  supergoon.com www.supergoon.com;

    location /.well-known/acme-challenge/ {
        root /var/www.challenge;
    }

    location / {
        proxy_pass  "http://go-supergoon-com:8080/";
    }


    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/wedding.supergoon.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/wedding.supergoon.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    # Caching
    ssl_session_cache shared:SSL:10m;
    # Headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
}
